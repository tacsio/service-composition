<!-- composicao BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Wed May 11 01:18:57 BRT 2011 -->
<bpel:process name="composicao"
         targetNamespace="http://composicao.localhost"
         suppressJoinFailure="yes"
         xmlns:tns="http://composicao.localhost"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns="http://www.mathertel.de/ValidatorDemo/" xmlns:ns0="http://buscaCEP">

    <!-- Import the client WSDL -->
	<bpel:import location="composicaoArtifacts.wsdl" namespace="http://composicao.localhost" 
	        importType="http://schemas.xmlsoap.org/wsdl/" />
         
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!-- The 'client' role represents the requester of this service. -->
        <bpel:partnerLink name="client"
                     partnerLinkType="tns:composicao"
                     myRole="composicaoProvider"
                     />
        <bpel:partnerLink name="mail" partnerLinkType="tns:mail" partnerRole="mailRole"></bpel:partnerLink>
        <bpel:partnerLink name="cep" partnerLinkType="tns:cep" partnerRole="cepRole"></bpel:partnerLink>
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        <bpel:variable name="input"
                  messageType="tns:composicaoRequestMessage"/>
                  
        <!-- 
          Reference to the message that will be returned to the requester
          -->
        <bpel:variable name="output"
                  messageType="tns:composicaoResponseMessage"/>
        <bpel:variable name="mailResponse" messageType="ns:ValidateEMailSoapOut"></bpel:variable>
        <bpel:variable name="mailRequest" messageType="ns:ValidateEMailSoapIn"></bpel:variable>
        <bpel:variable name="cepResponse" messageType="ns0:buscaCEPResponse"></bpel:variable>
        <bpel:variable name="cepRequest" messageType="ns0:buscaCEPRequest"></bpel:variable>
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->         
    <bpel:sequence name="main">
        
        <!-- Receive input from requester. 
             Note: This maps to operation defined in composicao.wsdl 
             -->
        <bpel:receive name="receiveInput" partnerLink="client"
                 portType="tns:composicao"
                 operation="process" variable="input"
                 createInstance="yes"/>
        
        <!-- Generate reply to synchronous request -->
        <bpel:assign validate="no" name="mail">
            <bpel:copy>
                <bpel:from><bpel:literal><tns:ValidateEMail xmlns:tns="http://www.mathertel.de/ValidatorDemo/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tns:emailAddress>tns:emailAddress</tns:emailAddress>
</tns:ValidateEMail>
</bpel:literal></bpel:from>
                <bpel:to variable="mailRequest" part="parameters"></bpel:to>
            </bpel:copy>
            <bpel:copy>
                <bpel:from part="payload" variable="input">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:email]]></bpel:query>
                </bpel:from>
                <bpel:to part="parameters" variable="mailRequest">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:emailAddress]]></bpel:query>
                </bpel:to>
            </bpel:copy>
        </bpel:assign>
        <bpel:invoke name="InvokeMail" partnerLink="mail" operation="ValidateEMail" portType="ns:ValidatorDemoSoap" inputVariable="mailRequest" outputVariable="mailResponse"></bpel:invoke>
        
        <bpel:if name="isValid">
            <bpel:condition><![CDATA[$mailResponse.parameters/ns:ValidateEMailResult="true"]]></bpel:condition>
            <bpel:sequence name="SequenceValid">
                <bpel:assign validate="no" name="cep">
                    
                    <bpel:copy>
                        <bpel:from><bpel:literal><impl:buscaCEP xmlns:impl="http://buscaCEP" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <impl:cep>impl:cep</impl:cep>
</impl:buscaCEP>
</bpel:literal></bpel:from>
                        <bpel:to variable="cepRequest" part="parameters"></bpel:to>
                    </bpel:copy>
                    <bpel:copy>
                        <bpel:from part="payload" variable="input">
                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:cep]]></bpel:query>
                        </bpel:from>
                        <bpel:to part="parameters" variable="cepRequest">
                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns0:cep]]></bpel:query>
                        </bpel:to>
                    </bpel:copy>
                </bpel:assign>
                <bpel:invoke name="InvokeCep" partnerLink="cep" operation="buscaCEP" portType="ns0:BuscaCEP" inputVariable="cepRequest" outputVariable="cepResponse"></bpel:invoke>
                
                
                
                <bpel:if name="addressReturned">
                    <bpel:condition><![CDATA[$cepResponse.parameters/ns0:buscaCEPReturn!=""]]></bpel:condition>
                    <bpel:sequence name="SequenceReturned">
                        <bpel:assign validate="no" name="parse">
                            <bpel:copy>
                                <bpel:from><bpel:literal><tns:composicaoResponse xmlns:tns="http://composicao.localhost" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tns:result>tns:result</tns:result>
</tns:composicaoResponse>
</bpel:literal></bpel:from>
                                <bpel:to variable="output" part="payload"></bpel:to>
                            </bpel:copy>
                            <bpel:copy>
                                <bpel:from part="parameters" variable="cepResponse">
                                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns0:buscaCEPReturn]]></bpel:query>
                                </bpel:from>
                                <bpel:to part="payload" variable="output">
                                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:result]]></bpel:query>
                                </bpel:to>
                            </bpel:copy>
                        </bpel:assign>
                    </bpel:sequence>
                    <bpel:else>
                        <bpel:sequence name="SequenceFail">
                            <bpel:assign validate="no" name="error">
                                <bpel:copy>
                                    <bpel:from><bpel:literal><tns:composicaoResponse xmlns:tns="http://composicao.localhost" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tns:result>tns:result</tns:result>
</tns:composicaoResponse>
</bpel:literal></bpel:from>
                                    <bpel:to variable="output" part="payload"></bpel:to>
                                </bpel:copy>
                                <bpel:copy>
                                    <bpel:from>
                                        <![CDATA[string("CEP INVÁLIDO OU LOCALIDADE INEXISTENTE NA BASE")]]>
                                    </bpel:from>
                                    <bpel:to part="payload" variable="output">
                                        <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:result]]></bpel:query>
                                    </bpel:to>
                                </bpel:copy>
                            </bpel:assign>
                        </bpel:sequence>
                    </bpel:else>
                </bpel:if>
            </bpel:sequence>
            <bpel:else>
                <bpel:sequence name="SequenceInvalid">
                    <bpel:assign validate="no" name="errorResponse">
                        <bpel:copy>
                            <bpel:from><bpel:literal><tns:composicaoResponse xmlns:tns="http://composicao.localhost" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tns:result>tns:result</tns:result>
</tns:composicaoResponse>
</bpel:literal></bpel:from>
                            <bpel:to variable="output" part="payload"></bpel:to>
                        </bpel:copy>
                        <bpel:copy>
                            <bpel:from>
                                
                                
                                <![CDATA[concat("The email: ", $input.payload/tns:email, " is not valid")]]>
                            </bpel:from>
                            <bpel:to part="payload" variable="output">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:result]]></bpel:query>
                            </bpel:to>
                        </bpel:copy>
                    </bpel:assign>
                </bpel:sequence>
            </bpel:else>
        </bpel:if>
        <bpel:reply name="replyOutput" 
               partnerLink="client"
               portType="tns:composicao"
               operation="process" 
               variable="output"
               />
    </bpel:sequence>
</bpel:process>

